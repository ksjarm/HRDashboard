{
  "info": {
    "_postman_id": "d54be43d-6e90-44b4-a8ac-b061ff5ad590",
    "name": "hrapp",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_exporter_id": "9319536"
  },
  "item": [
    {
      "name": "Employees Controller Tests",
      "item": [
        {
          "name": "Add Employee 1",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "pm.test(\"Employee1 data is correct\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.name).to.eql(\"Name1\");",
                  "    pm.expect(jsonData.surname).to.eql(\"Surname1\");",
                  "    pm.expect(jsonData.position).to.eql(\"Vendor\");",
                  "    pm.environment.set(\"employee1Id\", jsonData.id); ",
                  "});",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n\t\"name\": \"Name1\",\n\t\"surname\": \"Surname1\",\n\t\"position\": \"Vendor\",\n\t\"status\": \"Active\"}"
            },
            "url": {
              "raw": "{{url}}/api/employees",
              "host": ["{{url}}"],
              "path": ["api", "employees"]
            }
          },
          "response": []
        },
        {
          "name": "POST NEW SHIFT",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var jsonData = pm.response.json();",
                  "pm.environment.set(\"sId\", jsonData.id);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"title\": \"New Year Shift\",\n    \"date\": \"2023-12-31\",\n    \"startTime\": 12:00\",\n  \"endTime\": 22:00\",\n \"valik\": OneTime\",\n }"
            },
            "url": {
              "raw": "{{url}}/api/shifts",
              "host": ["{{url}}"],
              "path": ["api", "shifts"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Shifts Controller Tests",
      "item": [
        {
          "name": "Get Shifts",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{url}}/api/shifts",
              "host": ["{{url}}"],
              "path": ["api", "shifts"]
            }
          },
          "response": [
            {
              "status": "200",
              "code": 200,
              "name": "Status code is 200",
              "tests": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "pm.test(\"Response body is an array\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData).to.be.an(\"array\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ]
            }
          ]
        },
        {
          "name": "Get Shift",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{url}}/api/shifts/{{shiftId}}",
              "host": ["{{url}}"],
              "path": ["api", "shifts", "{{shiftId}}"]
            }
          },
          "response": [
            {
              "status": "200",
              "code": 200,
              "name": "Status code is 200",
              "tests": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "pm.test(\"Response body contains shift details\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData).to.have.property(\"title\");",
                      "    pm.expect(jsonData).to.have.property(\"date\");",
                      "    pm.expect(jsonData).to.have.property(\"startTime\");",
                      "    pm.expect(jsonData).to.have.property(\"endTime\");",
                      "    pm.expect(jsonData).to.have.property(\"valik\");",
                      "    pm.expect(jsonData).to.have.property(\"id\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ]
            }
          ]
        }
      ]      
    }
  ]
}
